<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SolutionGen.Compiling.Model" #>
<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props"
            Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')"/>
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' "><#= DefaultConfiguration #></Configuration>
        <Platform Condition=" '$(Platform)' == '' "><#= DefaultPlatform #></Platform>
        <ProjectGuid>{<#= ProjectGuid #>}</ProjectGuid>
        <OutputType>Library</OutputType>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <RootNamespace><#= RootNamespace #></RootNamespace>
        <AssemblyName><#= Project.Name #></AssemblyName>
        <TargetFrameworkVersion><#= TargetFrameworkVersion #></TargetFrameworkVersion>
        <LangVersion><#= LanguageVersion #></LangVersion>
        <FileAlignment>512</FileAlignment>
    </PropertyGroup>
<# foreach (string configuration in Solution.ActiveConfigurations.Keys)
{
    foreach (string platform in TargetPlatforms)
    {#>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == '<#= configuration #>|<#= platform #>' ">
        <PlatformTarget><#= GetStringProperty(configuration, Settings.PROP_CONFIGURATION_PLATFORM_TARGET) #></PlatformTarget>
        <DebugSymbols><#= GetStringProperty(configuration, Settings.PROP_DEBUG_SYMBOLS) #></DebugSymbols>
        <DebugType><#= GetStringProperty(configuration, Settings.PROP_DEBUG_TYPE) #></DebugType>
        <Optimize><#= GetStringProperty(configuration, Settings.PROP_OPTIMIZE) #></Optimize>
        <OutputPath>bin\<#= configuration #>\</OutputPath>
        <DefineConstants><#= GetDefineConstants(configuration) #></DefineConstants>
        <ErrorReport><#= GetStringProperty(configuration, Settings.PROP_ERROR_REPORT) #></ErrorReport>
        <WarningLevel><#= GetStringProperty(configuration, Settings.PROP_WARNING_LEVEL) #></WarningLevel>
    </PropertyGroup>
<#  }
}#>
    <ItemGroup>
        <Reference Include="System"/>
        <Reference Include="System.Core"/>
        <Reference Include="System.Data"/>
        <Reference Include="System.Xml"/>
    </ItemGroup>
    <ItemGroup>
        <!-- Common to all configurations -->
<# foreach (string file in GetCommonIncludes())
{#>
        <<#= Path.GetExtension(file) == ".cs" ? "Compile" : "Content" #> Include="<#= file #>" />
<#}
foreach (string projectName in GetCommonProjectRefs())
{#>
        <ProjectReference Include="<#= projectName #>.csproj" >
            <Project>{<#=Solution.GetProject(projectName).Guid #>}</Project>
            <Name><#= projectName #></Name>
        </ProjectReference>
<#}#>
    </ItemGroup>

<# foreach (string configuration in Solution.ActiveConfigurations.Keys)
{#>
    <ItemGroup Condition=" '$(Configuration)' == '<#= configuration #>' ">
<#  foreach(string file in GetConfigurationSpecificIncludes(configuration))
    {#>
        <<#= Path.GetExtension(file) == ".cs" ? "Compile" : "Content" #> Include="<#= file #>" />
<#  }

    foreach(string projectName in GetConfigurationSpecificProjectRefs(configuration))
    {#>
        <ProjectReference Include="<#= projectName #>.csproj" >
            <Project>{<#=Solution.GetProject(projectName).Guid #>}</Project>
            <Name><#= projectName #></Name>
        </ProjectReference>
<#  }#>
    </ItemGroup>
<#}#>
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets"/>
    <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
         Other similar extension points exist, see Microsoft.Common.targets.
    <Target Name="BeforeBuild">
    </Target>
    <Target Name="AfterBuild">
    </Target>
    -->

</Project>
