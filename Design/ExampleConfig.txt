In VS or Rider, generating solution once makes these configurations available
    <platform>-Debug
    <platform>-Release
    <platform>-Editor
where <platform> is one of:
    Android
    iOS
    OSX
    Windows

There is no need to regenerate the solution to check different configurations or target platforms
The default EditorDebug for the target platform of the editor when it ran the solution generator.

All Conditionals:
    debug
    release
    tests
    editor
    editor_osx
    editor_windows
    runtime
    target_osx
    target_windows
    target_ios
    target_android

Editor Conditionals:
    debug
    tests
    editor
    editor_osx

// Solution Config
solution MySolution
{
    set templates: glob "Templates/**/*.template.txt"
    set modules: glob "**/*.module.txt"
}

// Module Config
module MyModule : UnityModuleTemplate
{
    // Additional projects not defined by template can be added here.
}

// Unity Module Template
template UnityModuleTemplate
{
    // TODO: must be able to pass in additional define constants from Unity. eg: DEVELOPMENT_BUILD, project settings, etc.
    // TODO: conditional blocks for Mac, Windows, etc

    configuration everything
    [
        Test:       debug,runtime,test
        Debug:      debug,runtime
        Release:    release,runtime
        Editor:     debug,editor,test
    ]

    configuration no-tests
    [
        Test:       debug,runtime
        Debug:      debug,runtime
        Release:    release,runtime
        Editor:     debug,editor
    ]

    add project $(MODULE_NAME) : project
    add project $(MODULE_NAME).Tests : project.tests
    add project $(MODULE_NAME).Editor : project.editor
    add project $(MODULE_NAME).Editor.Tests : project.editor.tests

    settings project
    {
        set include paths: "./"
        set exclude paths: glob "**/{Editor,Tests}/"
        set include files: glob "*.{cs,txt,json,xml,md}"

        set target framework: net4.6
        set language version: 6

        add lib refs
        [
            $(UNITY_INSTALL_PATH)/Managed/UnityEngine.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/GUISystem/UnityEngine.UI.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/Networking/UnityEngine.Networking.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/Timeline/RuntimeEditor/UnityEngine.Timeline.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/UIAutomation/UnityEngine.UIAutomation.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/UnityGoogleAudioSpatializer/RuntimeEditor/UnityEngine.GoogleAudioSpatializer.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/UnityHoloLens/RuntimeEditor/UnityEngine.HoloLens.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/UnitySpatialTracking/RuntimeEditor/UnityEngine.SpatialTracking.dll
            $(UNITY_PACKAGE_CACHE)/com.unity.ads@2.0.3/UnityEngine.Advertisements.dll
            $(UNITY_PACKAGE_CACHE)/com.unity.analytics@2.0.13/UnityEngine.Analytics.dll
            $(UNITY_PACKAGE_CACHE)/com.unity.purchasing@0.0.19/UnityEngine.Purchasing.dll
            $(UNITY_PACKAGE_CACHE)/com.unity.standardevents@1.0.10/UnityEngine.StandardEvents.dll
        ]

        add lib refs (editor)
        [
            $(UNITY_INSTALL_PATH)/Managed/UnityEditor.dll
        ]

        add define constants
        [
            UNITY_5_3_OR_NEWER
            UNITY_5_4_OR_NEWER
            UNITY_5_5_OR_NEWER
            UNITY_5_6_OR_NEWER
            UNITY_2017_1_OR_NEWER
            UNITY_2017_2_OR_NEWER
            UNITY_2017_3_OR_NEWER
            UNITY_2017_3_1
            UNITY_2017_3
            UNITY_2017
            PLATFORM_ARCH_64
            UNITY_64
            NET_4_6
            UNITY_TEAM_LICENSE
            UNITY_PRO_LICENSE
        ]

        add define constants (debug)
        [
            DEBUG
            TRACE
            NOT_RELEASE
            ENABLE_PROFILER
            UNITY_ASSERTIONS
        ]

        add define constants (release)
        [
            RELEASE
            NOT_DEBUG
            NOT_TRACE
        ]

        add define constants (editor)
        [
            UNITY_EDITOR
            UNITY_EDITOR_64
        ]

        add define constants (editor&windows)
        [
            UNITY_EDITOR_WIN
        ]

        add define constants (editor&osx)
        [
            UNITY_EDITOR_OSX
        ]

        add define constants (target_windows)
        [
            UNITY_WIN
        ]

        add define constants (target_osx)
        [
            UNITY_OSX
        ]

        add define constants (target_ios)
        [
            UNITY_IOS
        ]

        add define constants (target_android)
        [
            UNITY_ANDROID
        ]
    }

    settings project.tests : project
    {
        exclude (no-tests)
        skip (!test)

        set include paths: glob "**/Tests/"
        set exclude paths: glob "**/Editor"

        add project refs
        [
            $(MODULE_NAME)
        ]

        add project refs (editor)
        [
            $(MODULE_NAME).Editor
        ]

        add lib refs
        [
            $(UNITY_INSTALL_PATH)/Unity/TestRunner/net35/unity-custom/nunit.framework.dll
        ]
    }

    settings project.editor : project
    {
        skip (runtime)

        set include paths: glob "**/Editor/"
        set exclude paths: glob "**/Tests/"

        add project refs
        [
            $(MODULE_NAME)
        ]

        add lib refs
        [
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/GUISystem/Editor/UnityEditor.UI.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/Networking/Editor/UnityEditor.Networking.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/TestRunner/Editor/UnityEditor.TestRunner.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/TestRunner/UnityEngine.TestRunner.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/Timeline/Editor/UnityEditor.Timeline.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/TreeEditor/Editor/UnityEditor.TreeEditor.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/UIAutomation/Editor/UnityEditor.UIAutomation.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/GoogleAudioSpatializer/Editor/UnityEditor.GoogleAudioSpatializer.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/UnityHoloLens/Editor/UnityEditor.HoloLens.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/UnitySpatialTracking/Editor/UnityEditor.SpatialTracking.dll
            $(UNITY_INSTALL_PATH)/UnityExtensions/Unity/UnityVR/Editor/UnityEditor.VR.dll
            $(UNITY_INSTALL_PATH)/Managed/UnityEditor.Graphs.dll
            $(UNITY_PACKAGE_CACHE)/com.unity.ads@2.0.3/Editor/UnityEditor.Advertisements.dll
            $(UNITY_PACKAGE_CACHE)/com.unity.analytics@2.0.13/Editor/UnityEditor.Analytics.dll
            $(UNITY_PACKAGE_CACHE)/com.unity.purchasing@0.0.19/Editor/UnityEditor.Purchasing.dll
        ]

        add lib refs (editor_osx)
        [
            $(UNITY_INSTALL_PATH)/../PlaybackEngines/AndroidPlayer/UnityEditor.Android.Extensions.dll
            $(UNITY_INSTALL_PATH)/../PlaybackEngines/iOSSupport/UnityEditor.iOS.Extensions.dll
            $(UNITY_INSTALL_PATH)/../PlaybackEngines/iOSSupport/UnityEditor.iOS.Extensions.Xcode.dll
            $(UNITY_INSTALL_PATH)/../PlaybackEngines/iOSSupport/UnityEditor.iOS.Extensions.Common.dll
            $(UNITY_INSTALL_PATH)/PlaybackEngines/MacStandaloneSupport/UnityEditor.OSXStandalone.Extensions.dll
        ]

        add lib refs (editor_windows)
        [
            $(UNITY_INSTALL_PATH)/PlaybackEngines/AndroidPlayer/UnityEditor.Android.Extensions.dll
            $(UNITY_INSTALL_PATH)/PlaybackEngines/WindowsStandaloneSupport/UnityEditor.WindowsStandalone.Extensions.dll
        ]
    }

    settings project.editor.tests : project.editor
    {
        exclude (no-tests)
        skip (!test)

        set include paths: glob "**/Tests/Editor/"
        set exclude paths: none

        add project refs
        [
            $(MODULE_NAME).Editor
            $(MODULE_NAME).Tests
        ]

        add lib refs
        [
            $(UNITY_INSTALL_PATH)/Editor/Data/UnityExtensions/Unity/TestRunner/net35/unity-custom/nunit.framework.dll
        ]
    }
}
